// Generated by CoffeeScript 1.6.3
/*
@desc Builds a tree structure from a array of Dicom files.
@author Michael Kaserer e1025263@student.tuwien.ac.at
*/


(function() {
  this.Tree = (function() {
    var buildFromDcmList;

    function Tree() {
      this.html = [];
    }

    Tree.prototype.render = function(list) {
      this.html = [];
      return $('#fileTree').empty().html(this.dcmRender(buildFromDcmList(list))).tree({
        expanded: 'li:first'
      });
    };

    buildFromDcmList = function(files) {
      var dcmTree, file, i, level1, level2, _i, _len;
      dcmTree = {};
      for (i = _i = 0, _len = files.length; _i < _len; i = ++_i) {
        file = files[i];
        level1 = file.PatientsName ? file.PatientsName : 'undefined';
        level2 = file.SeriesDescription ? file.SeriesDescription : 'undefined';
        if (!dcmTree[level1]) {
          dcmTree[level1] = {};
          dcmTree[level1][level2] = [];
          dcmTree[level1][level2].push(i);
        } else {
          if (!dcmTree[level1][level2]) {
            dcmTree[level1][level2] = [];
            dcmTree[level1][level2].push(i);
          } else {
            dcmTree[level1][level2].push(i);
          }
        }
      }
      return dcmTree;
    };

    Tree.prototype.dcmRender = function(tree) {
      var object;
      if (tree) {
        for (object in tree) {
          if ($.isArray(tree[object])) {
            this.html.push("<li><a href='#' data-type='file' data-index='" + tree[object] + "'>", object, '</a></li>');
          } else {
            this.html.push('<li><a href="#" data-type="folder">', object, '</a>');
            this.html.push('<ul>');
            this.dcmRender(tree[object]);
            this.html.push('</ul>');
          }
        }
        return this.html.join('');
      }
    };

    return Tree;

  })();

}).call(this);
